<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_ElementsStation2" Id="{4ed76ad3-a57e-4473-b6eb-95960c7cd6d9}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_ElementsStation2 IMPLEMENTS I_IterableElementCollection
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	_astElements			: ARRAY[0..MAX_ELEMENTS] OF ST_Element;
	_fbIterator				: FB_ElementIterator;
END_VAR

VAR CONSTANT
	MAX_ELEMENTS			: INT := 5;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="createIterator" Id="{5a327f04-4cd1-45b0-9c4d-db9aaa23c12b}">
      <Declaration><![CDATA[METHOD createIterator : REFERENCE TO FB_ElementIterator]]></Declaration>
      <Implementation>
        <ST><![CDATA[_fbIterator.init(io_astElements := _astElements);
createIterator REF= _fbIterator;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_Init" Id="{e8ff60d1-f8e4-4082-8af7-b456accc7f05}">
      <Declaration><![CDATA[//FB_Init is always available implicitly and it is used primarily for initialization.
//The return value is not evaluated. For a specific influence, you can also declare the
//methods explicitly and provide additional code there with the standard initialization
//code. You can evaluate the return value.
METHOD FB_Init: BOOL
VAR_INPUT
    bInitRetains: BOOL; // TRUE: the retain variables are initialized (reset warm / reset cold)
    bInCopyCode: BOOL;  // TRUE: the instance will be copied to the copy code afterward (online change)   
END_VAR
VAR 
	i : INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i:= 0 TO MAX_ELEMENTS DO
	_astElements[i].sName:= CONCAT('Element Station 2 No: ', TO_STRING(i + 1));
END_FOR]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>